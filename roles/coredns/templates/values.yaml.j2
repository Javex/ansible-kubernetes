isClusterService: true
serviceType: LoadBalancer
service:
  clusterIP: {{ coredns_cluster_ip }}
  annotations:
    # Explicitly request this IP to make DNS Servers stable
    metallb.io/loadBalancerIPs: {{ coredns_dns_ip }}

servers:
- zones:
  - zone: .
  port: 53
  # -- expose the service on a different port
  # servicePort: 5353
  # If serviceType is nodePort you can specify nodePort here
  # nodePort: 30053
  # hostPort: 53
  plugins:
  - name: errors

  # Serves a /health endpoint on :8080, required for livenessProbe
  - name: health
    configBlock: |-
      lameduck 5s

  # Serves a /ready endpoint on :8181, required for readinessProbe
  - name: ready

  - name: log
    parameters: .
    configBlock: |-
      class error

  # Serves a /metrics endpoint on :9153, required for serviceMonitor
  - name: prometheus
    parameters: :9153

  # Required to query kubernetes API for data
  - name: kubernetes
    parameters: cluster.local in-addr.arpa ip6.arpa
    configBlock: |-
      pods insecure
      fallthrough in-addr.arpa ip6.arpa
      ttl 30

  # Make CoreDNS fake a CNAME record for an entire subdomain
  # This means individual subdomains don't need to be defined, everything goes
  # to traefik
  - name: template
    parameters: IN A {{ coredns_cluster_domain_external }}
    configBlock: |-
      answer "{% raw %}{{ .Name }}{% endraw %} 60 IN CNAME traefik.traefik.{{ coredns_cluster_domain_internal }}"


  # Resolve k8s-internal domains to their public IP if the service has one
  - name: k8s_external
    parameters: {{ coredns_cluster_domain_internal }}

  - name: forward
    parameters: . /etc/resolv.conf
    configBlock: |-
      max_concurrent 1000

  - name: cache
    parameters: 30
    configBlock: |-
      disable success cluster.local
      disable denial cluster.local

  - name: loop
  - name: reload
  - name: loadbalance
